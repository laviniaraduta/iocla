
break_this:     file format elf32-i386


Disassembly of section .init:

080483b8 <_init>:
 80483b8:	53                   	push   ebx
 80483b9:	83 ec 08             	sub    esp,0x8
 80483bc:	e8 0f 01 00 00       	call   80484d0 <__x86.get_pc_thunk.bx>
 80483c1:	81 c3 3f 1c 00 00    	add    ebx,0x1c3f
 80483c7:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 80483cd:	85 c0                	test   eax,eax
 80483cf:	74 05                	je     80483d6 <_init+0x1e>
 80483d1:	e8 9a 00 00 00       	call   8048470 <__gmon_start__@plt>
 80483d6:	83 c4 08             	add    esp,0x8
 80483d9:	5b                   	pop    ebx
 80483da:	c3                   	ret    

Disassembly of section .plt:

080483e0 <.plt>:
 80483e0:	ff 35 04 a0 04 08    	push   DWORD PTR ds:0x804a004
 80483e6:	ff 25 08 a0 04 08    	jmp    DWORD PTR ds:0x804a008
 80483ec:	00 00                	add    BYTE PTR [eax],al
	...

080483f0 <printf@plt>:
 80483f0:	ff 25 0c a0 04 08    	jmp    DWORD PTR ds:0x804a00c
 80483f6:	68 00 00 00 00       	push   0x0
 80483fb:	e9 e0 ff ff ff       	jmp    80483e0 <.plt>

08048400 <fgets@plt>:
 8048400:	ff 25 10 a0 04 08    	jmp    DWORD PTR ds:0x804a010
 8048406:	68 08 00 00 00       	push   0x8
 804840b:	e9 d0 ff ff ff       	jmp    80483e0 <.plt>

08048410 <_IO_getc@plt>:
 8048410:	ff 25 14 a0 04 08    	jmp    DWORD PTR ds:0x804a014
 8048416:	68 10 00 00 00       	push   0x10
 804841b:	e9 c0 ff ff ff       	jmp    80483e0 <.plt>

08048420 <puts@plt>:
 8048420:	ff 25 18 a0 04 08    	jmp    DWORD PTR ds:0x804a018
 8048426:	68 18 00 00 00       	push   0x18
 804842b:	e9 b0 ff ff ff       	jmp    80483e0 <.plt>

08048430 <system@plt>:
 8048430:	ff 25 1c a0 04 08    	jmp    DWORD PTR ds:0x804a01c
 8048436:	68 20 00 00 00       	push   0x20
 804843b:	e9 a0 ff ff ff       	jmp    80483e0 <.plt>

08048440 <strlen@plt>:
 8048440:	ff 25 20 a0 04 08    	jmp    DWORD PTR ds:0x804a020
 8048446:	68 28 00 00 00       	push   0x28
 804844b:	e9 90 ff ff ff       	jmp    80483e0 <.plt>

08048450 <__libc_start_main@plt>:
 8048450:	ff 25 24 a0 04 08    	jmp    DWORD PTR ds:0x804a024
 8048456:	68 30 00 00 00       	push   0x30
 804845b:	e9 80 ff ff ff       	jmp    80483e0 <.plt>

08048460 <__isoc99_scanf@plt>:
 8048460:	ff 25 28 a0 04 08    	jmp    DWORD PTR ds:0x804a028
 8048466:	68 38 00 00 00       	push   0x38
 804846b:	e9 70 ff ff ff       	jmp    80483e0 <.plt>

Disassembly of section .plt.got:

08048470 <__gmon_start__@plt>:
 8048470:	ff 25 fc 9f 04 08    	jmp    DWORD PTR ds:0x8049ffc
 8048476:	66 90                	xchg   ax,ax

Disassembly of section .text:

08048480 <_start>:
 8048480:	31 ed                	xor    ebp,ebp
 8048482:	5e                   	pop    esi
 8048483:	89 e1                	mov    ecx,esp
 8048485:	83 e4 f0             	and    esp,0xfffffff0
 8048488:	50                   	push   eax
 8048489:	54                   	push   esp
 804848a:	52                   	push   edx
 804848b:	e8 23 00 00 00       	call   80484b3 <_start+0x33>
 8048490:	81 c3 70 1b 00 00    	add    ebx,0x1b70
 8048496:	8d 83 90 e7 ff ff    	lea    eax,[ebx-0x1870]
 804849c:	50                   	push   eax
 804849d:	8d 83 30 e7 ff ff    	lea    eax,[ebx-0x18d0]
 80484a3:	50                   	push   eax
 80484a4:	51                   	push   ecx
 80484a5:	56                   	push   esi
 80484a6:	c7 c0 00 87 04 08    	mov    eax,0x8048700
 80484ac:	50                   	push   eax
 80484ad:	e8 9e ff ff ff       	call   8048450 <__libc_start_main@plt>
 80484b2:	f4                   	hlt    
 80484b3:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 80484b6:	c3                   	ret    
 80484b7:	66 90                	xchg   ax,ax
 80484b9:	66 90                	xchg   ax,ax
 80484bb:	66 90                	xchg   ax,ax
 80484bd:	66 90                	xchg   ax,ax
 80484bf:	90                   	nop

080484c0 <_dl_relocate_static_pie>:
 80484c0:	f3 c3                	repz ret 
 80484c2:	66 90                	xchg   ax,ax
 80484c4:	66 90                	xchg   ax,ax
 80484c6:	66 90                	xchg   ax,ax
 80484c8:	66 90                	xchg   ax,ax
 80484ca:	66 90                	xchg   ax,ax
 80484cc:	66 90                	xchg   ax,ax
 80484ce:	66 90                	xchg   ax,ax

080484d0 <__x86.get_pc_thunk.bx>:
 80484d0:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 80484d3:	c3                   	ret    
 80484d4:	66 90                	xchg   ax,ax
 80484d6:	66 90                	xchg   ax,ax
 80484d8:	66 90                	xchg   ax,ax
 80484da:	66 90                	xchg   ax,ax
 80484dc:	66 90                	xchg   ax,ax
 80484de:	66 90                	xchg   ax,ax

080484e0 <deregister_tm_clones>:
 80484e0:	b8 34 a0 04 08       	mov    eax,0x804a034
 80484e5:	3d 34 a0 04 08       	cmp    eax,0x804a034
 80484ea:	74 24                	je     8048510 <deregister_tm_clones+0x30>
 80484ec:	b8 00 00 00 00       	mov    eax,0x0
 80484f1:	85 c0                	test   eax,eax
 80484f3:	74 1b                	je     8048510 <deregister_tm_clones+0x30>
 80484f5:	55                   	push   ebp
 80484f6:	89 e5                	mov    ebp,esp
 80484f8:	83 ec 14             	sub    esp,0x14
 80484fb:	68 34 a0 04 08       	push   0x804a034
 8048500:	ff d0                	call   eax
 8048502:	83 c4 10             	add    esp,0x10
 8048505:	c9                   	leave  
 8048506:	c3                   	ret    
 8048507:	89 f6                	mov    esi,esi
 8048509:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
 8048510:	f3 c3                	repz ret 
 8048512:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 8048519:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

08048520 <register_tm_clones>:
 8048520:	b8 34 a0 04 08       	mov    eax,0x804a034
 8048525:	2d 34 a0 04 08       	sub    eax,0x804a034
 804852a:	c1 f8 02             	sar    eax,0x2
 804852d:	89 c2                	mov    edx,eax
 804852f:	c1 ea 1f             	shr    edx,0x1f
 8048532:	01 d0                	add    eax,edx
 8048534:	d1 f8                	sar    eax,1
 8048536:	74 20                	je     8048558 <register_tm_clones+0x38>
 8048538:	ba 00 00 00 00       	mov    edx,0x0
 804853d:	85 d2                	test   edx,edx
 804853f:	74 17                	je     8048558 <register_tm_clones+0x38>
 8048541:	55                   	push   ebp
 8048542:	89 e5                	mov    ebp,esp
 8048544:	83 ec 10             	sub    esp,0x10
 8048547:	50                   	push   eax
 8048548:	68 34 a0 04 08       	push   0x804a034
 804854d:	ff d2                	call   edx
 804854f:	83 c4 10             	add    esp,0x10
 8048552:	c9                   	leave  
 8048553:	c3                   	ret    
 8048554:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 8048558:	f3 c3                	repz ret 
 804855a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

08048560 <__do_global_dtors_aux>:
 8048560:	80 3d 44 a0 04 08 00 	cmp    BYTE PTR ds:0x804a044,0x0
 8048567:	75 17                	jne    8048580 <__do_global_dtors_aux+0x20>
 8048569:	55                   	push   ebp
 804856a:	89 e5                	mov    ebp,esp
 804856c:	83 ec 08             	sub    esp,0x8
 804856f:	e8 6c ff ff ff       	call   80484e0 <deregister_tm_clones>
 8048574:	c6 05 44 a0 04 08 01 	mov    BYTE PTR ds:0x804a044,0x1
 804857b:	c9                   	leave  
 804857c:	c3                   	ret    
 804857d:	8d 76 00             	lea    esi,[esi+0x0]
 8048580:	f3 c3                	repz ret 
 8048582:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 8048589:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

08048590 <frame_dummy>:
 8048590:	55                   	push   ebp
 8048591:	89 e5                	mov    ebp,esp
 8048593:	5d                   	pop    ebp
 8048594:	eb 8a                	jmp    8048520 <register_tm_clones>

08048596 <magic_function>:
 8048596:	55                   	push   ebp
 8048597:	89 e5                	mov    ebp,esp
 8048599:	83 ec 08             	sub    esp,0x8
 804859c:	83 ec 0c             	sub    esp,0xc
 804859f:	68 b0 87 04 08       	push   0x80487b0
 80485a4:	e8 87 fe ff ff       	call   8048430 <system@plt>
 80485a9:	83 c4 10             	add    esp,0x10
 80485ac:	90                   	nop
 80485ad:	c9                   	leave  
 80485ae:	c3                   	ret    

080485af <read_buffer>:
 80485af:	55                   	push   ebp
 80485b0:	89 e5                	mov    ebp,esp
 80485b2:	57                   	push   edi
 80485b3:	83 ec 54             	sub    esp,0x54
 80485b6:	c7 45 f0 ef be ad de 	mov    DWORD PTR [ebp-0x10],0xdeadbeef
 80485bd:	0f b7 05 4a 88 04 08 	movzx  eax,WORD PTR ds:0x804884a
 80485c4:	66 89 45 a8          	mov    WORD PTR [ebp-0x58],ax
 80485c8:	8d 55 aa             	lea    edx,[ebp-0x56]
 80485cb:	b8 00 00 00 00       	mov    eax,0x0
 80485d0:	66 89 02             	mov    WORD PTR [edx],ax
 80485d3:	83 c2 02             	add    edx,0x2
 80485d6:	b9 0f 00 00 00       	mov    ecx,0xf
 80485db:	89 d7                	mov    edi,edx
 80485dd:	f3 ab                	rep stos DWORD PTR es:[edi],eax
 80485df:	83 ec 0c             	sub    esp,0xc
 80485e2:	68 da 87 04 08       	push   0x80487da
 80485e7:	e8 04 fe ff ff       	call   80483f0 <printf@plt>
 80485ec:	83 c4 10             	add    esp,0x10
 80485ef:	83 ec 08             	sub    esp,0x8
 80485f2:	8d 45 e8             	lea    eax,[ebp-0x18]
 80485f5:	50                   	push   eax
 80485f6:	68 f1 87 04 08       	push   0x80487f1
 80485fb:	e8 60 fe ff ff       	call   8048460 <__isoc99_scanf@plt>
 8048600:	83 c4 10             	add    esp,0x10
 8048603:	a1 40 a0 04 08       	mov    eax,ds:0x804a040
 8048608:	83 ec 0c             	sub    esp,0xc
 804860b:	50                   	push   eax
 804860c:	e8 ff fd ff ff       	call   8048410 <_IO_getc@plt>
 8048611:	83 c4 10             	add    esp,0x10
 8048614:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
 8048617:	83 ec 08             	sub    esp,0x8
 804861a:	50                   	push   eax
 804861b:	68 f4 87 04 08       	push   0x80487f4
 8048620:	e8 cb fd ff ff       	call   80483f0 <printf@plt>
 8048625:	83 c4 10             	add    esp,0x10
 8048628:	83 ec 0c             	sub    esp,0xc
 804862b:	68 fe 87 04 08       	push   0x80487fe
 8048630:	e8 bb fd ff ff       	call   80483f0 <printf@plt>
 8048635:	83 c4 10             	add    esp,0x10
 8048638:	8b 15 40 a0 04 08    	mov    edx,DWORD PTR ds:0x804a040
 804863e:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
 8048641:	83 ec 04             	sub    esp,0x4
 8048644:	52                   	push   edx
 8048645:	50                   	push   eax
 8048646:	8d 45 a8             	lea    eax,[ebp-0x58]
 8048649:	50                   	push   eax
 804864a:	e8 b1 fd ff ff       	call   8048400 <fgets@plt>
 804864f:	83 c4 10             	add    esp,0x10
 8048652:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
 8048655:	83 ec 08             	sub    esp,0x8
 8048658:	50                   	push   eax
 8048659:	68 15 88 04 08       	push   0x8048815
 804865e:	e8 8d fd ff ff       	call   80483f0 <printf@plt>
 8048663:	83 c4 10             	add    esp,0x10
 8048666:	83 ec 0c             	sub    esp,0xc
 8048669:	68 1f 88 04 08       	push   0x804881f
 804866e:	e8 7d fd ff ff       	call   80483f0 <printf@plt>
 8048673:	83 c4 10             	add    esp,0x10
 8048676:	83 ec 0c             	sub    esp,0xc
 8048679:	8d 45 a8             	lea    eax,[ebp-0x58]
 804867c:	50                   	push   eax
 804867d:	e8 be fd ff ff       	call   8048440 <strlen@plt>
 8048682:	83 c4 10             	add    esp,0x10
 8048685:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
 8048688:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
 804868f:	eb 32                	jmp    80486c3 <read_buffer+0x114>
 8048691:	8d 55 a8             	lea    edx,[ebp-0x58]
 8048694:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
 8048697:	01 d0                	add    eax,edx
 8048699:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 804869c:	0f be d0             	movsx  edx,al
 804869f:	8d 4d a8             	lea    ecx,[ebp-0x58]
 80486a2:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
 80486a5:	01 c8                	add    eax,ecx
 80486a7:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 80486aa:	0f be c0             	movsx  eax,al
 80486ad:	83 ec 04             	sub    esp,0x4
 80486b0:	52                   	push   edx
 80486b1:	50                   	push   eax
 80486b2:	68 2b 88 04 08       	push   0x804882b
 80486b7:	e8 34 fd ff ff       	call   80483f0 <printf@plt>
 80486bc:	83 c4 10             	add    esp,0x10
 80486bf:	83 45 f4 01          	add    DWORD PTR [ebp-0xc],0x1
 80486c3:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
 80486c6:	83 c0 02             	add    eax,0x2
 80486c9:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
 80486cc:	72 c3                	jb     8048691 <read_buffer+0xe2>
 80486ce:	83 ec 0c             	sub    esp,0xc
 80486d1:	68 35 88 04 08       	push   0x8048835
 80486d6:	e8 45 fd ff ff       	call   8048420 <puts@plt>
 80486db:	83 c4 10             	add    esp,0x10
 80486de:	83 ec 08             	sub    esp,0x8
 80486e1:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
 80486e4:	68 36 88 04 08       	push   0x8048836
 80486e9:	e8 02 fd ff ff       	call   80483f0 <printf@plt>
 80486ee:	83 c4 10             	add    esp,0x10
 80486f1:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
 80486f4:	88 45 aa             	mov    BYTE PTR [ebp-0x56],al
 80486f7:	0f b6 45 a8          	movzx  eax,BYTE PTR [ebp-0x58]
 80486fb:	8b 7d fc             	mov    edi,DWORD PTR [ebp-0x4]
 80486fe:	c9                   	leave  
 80486ff:	c3                   	ret    

08048700 <main>:
 8048700:	8d 4c 24 04          	lea    ecx,[esp+0x4]
 8048704:	83 e4 f0             	and    esp,0xfffffff0
 8048707:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
 804870a:	55                   	push   ebp
 804870b:	89 e5                	mov    ebp,esp
 804870d:	51                   	push   ecx
 804870e:	83 ec 04             	sub    esp,0x4
 8048711:	e8 99 fe ff ff       	call   80485af <read_buffer>
 8048716:	b8 00 00 00 00       	mov    eax,0x0
 804871b:	83 c4 04             	add    esp,0x4
 804871e:	59                   	pop    ecx
 804871f:	5d                   	pop    ebp
 8048720:	8d 61 fc             	lea    esp,[ecx-0x4]
 8048723:	c3                   	ret    
 8048724:	66 90                	xchg   ax,ax
 8048726:	66 90                	xchg   ax,ax
 8048728:	66 90                	xchg   ax,ax
 804872a:	66 90                	xchg   ax,ax
 804872c:	66 90                	xchg   ax,ax
 804872e:	66 90                	xchg   ax,ax

08048730 <__libc_csu_init>:
 8048730:	55                   	push   ebp
 8048731:	57                   	push   edi
 8048732:	56                   	push   esi
 8048733:	53                   	push   ebx
 8048734:	e8 97 fd ff ff       	call   80484d0 <__x86.get_pc_thunk.bx>
 8048739:	81 c3 c7 18 00 00    	add    ebx,0x18c7
 804873f:	83 ec 0c             	sub    esp,0xc
 8048742:	8b 6c 24 28          	mov    ebp,DWORD PTR [esp+0x28]
 8048746:	8d b3 10 ff ff ff    	lea    esi,[ebx-0xf0]
 804874c:	e8 67 fc ff ff       	call   80483b8 <_init>
 8048751:	8d 83 0c ff ff ff    	lea    eax,[ebx-0xf4]
 8048757:	29 c6                	sub    esi,eax
 8048759:	c1 fe 02             	sar    esi,0x2
 804875c:	85 f6                	test   esi,esi
 804875e:	74 25                	je     8048785 <__libc_csu_init+0x55>
 8048760:	31 ff                	xor    edi,edi
 8048762:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 8048768:	83 ec 04             	sub    esp,0x4
 804876b:	55                   	push   ebp
 804876c:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 8048770:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 8048774:	ff 94 bb 0c ff ff ff 	call   DWORD PTR [ebx+edi*4-0xf4]
 804877b:	83 c7 01             	add    edi,0x1
 804877e:	83 c4 10             	add    esp,0x10
 8048781:	39 fe                	cmp    esi,edi
 8048783:	75 e3                	jne    8048768 <__libc_csu_init+0x38>
 8048785:	83 c4 0c             	add    esp,0xc
 8048788:	5b                   	pop    ebx
 8048789:	5e                   	pop    esi
 804878a:	5f                   	pop    edi
 804878b:	5d                   	pop    ebp
 804878c:	c3                   	ret    
 804878d:	8d 76 00             	lea    esi,[esi+0x0]

08048790 <__libc_csu_fini>:
 8048790:	f3 c3                	repz ret 

Disassembly of section .fini:

08048794 <_fini>:
 8048794:	53                   	push   ebx
 8048795:	83 ec 08             	sub    esp,0x8
 8048798:	e8 33 fd ff ff       	call   80484d0 <__x86.get_pc_thunk.bx>
 804879d:	81 c3 63 18 00 00    	add    ebx,0x1863
 80487a3:	83 c4 08             	add    esp,0x8
 80487a6:	5b                   	pop    ebx
 80487a7:	c3                   	ret    
